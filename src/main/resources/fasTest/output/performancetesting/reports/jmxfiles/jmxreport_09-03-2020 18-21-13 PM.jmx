<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1">
  <org.apache.jorphan.collections.HashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="AutomationTestPlan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <org.apache.jorphan.collections.HashTree>
      <SetupThreadGroup guiclass="ThreadGroupGui" testclass="java.lang.ThreadGroup" testname="AutomationThreadGroup">
        <intProp name="ThreadGroup.num_threads">2</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </SetupThreadGroup>
      <org.apache.jorphan.collections.HashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="MarshalQueryParams">
          <stringProp name="filename">D:\workspaces\peripheralWorkspace\JmeterExampleProject\src\it\resources\claims3.csv</stringProp>
          <stringProp name="TestPlan.comments">List of query params</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="variableNames">claimid,claimer,body</stringProp>
          <stringProp name="recycle">false</stringProp>
          <stringProp name="ignoreFirstLine">true</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.thread</stringProp>
        </CSVDataSet>
        <org.apache.jorphan.collections.HashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AutomationPerformanceTest">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="body" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">body</stringProp>
                <stringProp name="Argument.value">${body}</stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/peripherals/fedexoffice/v1/claims/${claimid}/abcd/${claimer}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <intProp name="HTTPSampler.port">8086</intProp>
          <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
        </HTTPSamplerProxy>
        <org.apache.jorphan.collections.HashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
          </HeaderManager>
          <org.apache.jorphan.collections.HashTree/>
        </org.apache.jorphan.collections.HashTree>
      </org.apache.jorphan.collections.HashTree>
    </org.apache.jorphan.collections.HashTree>
  </org.apache.jorphan.collections.HashTree>
</jmeterTestPlan>
