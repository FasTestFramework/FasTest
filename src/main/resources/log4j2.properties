name=PropertiesConfig
property.filename = logs

# Give directory path where log files should get stored
property.log-path=./log

loggers=fastestRollingAppender

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} %highlight{${LOG_LEVEL_PATTERN:-%5p}}{FATAL=red blink, ERROR=red, WARN=yellow bold, INFO=green, DEBUG=green bold, TRACE=blue} %style{${sys:PID}}{magenta} [%15.15t] %style{%-40.40C{1.}}{cyan} %C.%M %L : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%rEx}

# RollingFileAppender will print Fastest installer logs in file which can be rotated based on time or size
appender.fastestRollingAppender.type = RollingFile
appender.fastestRollingAppender.name = fastestAppender
appender.fastestRollingAppender.fileName = ${log-path}/FastestAutomation.log
appender.fastestRollingAppender.filePattern = ${log-path}/FastestAutomation-%d{yyyy-MM-dd}-%i.zip
appender.fastestRollingAppender.layout.type = PatternLayout
# Specify the pattern of the logs
appender.fastestRollingAppender.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} | %-5.5p | %-10.10t |	%-60.60C:%-5.5L | %msg%n
appender.fastestRollingAppender.policies.type = Policies
# Rotate log file each day
appender.fastestRollingAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.fastestRollingAppender.policies.time.interval = 1
appender.fastestRollingAppender.policies.time.modulate = true
# Rotate log file after 100mb size
appender.fastestRollingAppender.policies.size.type = SizeBasedTriggeringPolicy
appender.fastestRollingAppender.policies.size.size=100MB
appender.fastestRollingAppender.strategy.type = DefaultRolloverStrategy
appender.fastestRollingAppender.strategy.action.type = Delete
appender.fastestRollingAppender.strategy.action.basepath =${log-path}
appender.fastestRollingAppender.strategy.action.maxdepth = 1
appender.fastestRollingAppender.strategy.action.condition.type = IfLastModified
appender.fastestRollingAppender.strategy.action.condition.age = 1D
appender.fastestRollingAppender.strategy.action.PathConditions.type = IfFileName
appender.fastestRollingAppender.strategy.action.PathConditions.glob = *.zip
# Root Logger
rootLogger.level = info
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT
# FastestInstaller  Loggers
logger.fastestRollingAppender.name = com.infogain
logger.fastestRollingAppender.level = trace
logger.fastestRollingAppender.additivity = true
logger.fastestRollingAppender.appenderRef.fastestRollingAppender.ref = fastestAppender
